#!/usr/bin/env bash

#==== SCRIPT ===========================================================
#        NAME:  publish-mad-utils
#
# DESCRIPTION:  Publish mad-utils to npm (git commit & push to master) &
#               optionally reinstall in Javelin & webclient projects
#
#     EXAMPLE:  publish-mad-utils 1.10.2
#     EXAMPLE:  publish-mad-utils 0.52.6 --local-reinstalls
#
#   @PARAM $1:  NEW_VERISON_NUMBER Version number to upgrade to. Must be
#                                  semver e.g. 0.41.22
#
#    @FLAG $2:  --local-reinstalls If set, try to reinstall mad-utils in
#                                  Javelin and webclient projects. Must
#                                  set paths JAVELIN_DIR & WEBCLIENT_DIR
#                                  in script/.env for this to work
#
#=======================================================================

############################################# HELPERS ##############################################
function local_reinstalls_usage {
    echo "JAVELIN_DIR or WEBCLIENT_DIR is not set"
    echo "Please add JAVELIN_DIR & WEBCLIENT_DIR vars to .env file."
    echo "Set their paths to the Javelin and webclient repos, respectively."
    echo ""
    echo "e.g.:"
    echo "JAVELIN_DIR=~/projects/ohri/CANImmunize-Javelin"
    echo "WEBCLIENT_DIR=~/projects/ohri/canimmunize-web-client-v2"
    echo ""
    exit
}

######################################## ARGUMENT HANDLING #########################################
# Ensure 1st argument given
if [[ ! -n "$1" ]]; then
    echo "Must call with new version number as first arg. e.g.:"
    echo "  publish.sh 0.52.5"
    exit
fi

NEW_VERSION_NUMBER=$1

# Ensure 1st argument is semver number
if [[ $NEW_VERSION_NUMBER =~ .*[a-zA-Z].* ]] || [[ ! $NEW_VERSION_NUMBER =~ ^[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?$ ]]; then
  echo "New version number must be in semver format e.g.:"
  echo "0.10.3"
  exit
fi

# Get values from .env config (Javelin and webclient locations)
. ./script/.env

# Check whether script should install in Javelin & webclient locations
if [[ "$2" == "--local-reinstalls" ]]; then
    if [[ ! -n "$JAVELIN_DIR" ]] || [[ ! -n "$WEBCLIENT_DIR" ]]; then
        local_reinstalls_usage
        exit
    fi
    echo "Will reinstall in Javelin & webclient dirs (--local-reinstalls set)"
else
    echo "Skipping installation in Javelin & webclient dirs (--local-reinstalls not set)"
fi

####################################### CONVENIENCE ALIASES ########################################
# Git aliases for convenience
alias g_curbr="git status | head -1 | awk '{print \$3}'"
alias gpocur='echo "$(g_curbr)" | xargs git push origin'

############################################ RUN SCRIPT ############################################
# Push current branch
gpocur

# Replace the version number in package.json
replace-in-file /\"version\":\ *\"[0-9]+\.[0-9]+\.[0-9]+\.?[0-9]?[0-9]?[0-9]?[0-9]?/g "\"version\": \"$NEW_VERSION_NUMBER\"" package.json --isRegex
replace-in-file /mad\-utils\.git#v[0-9]+\.[0-9]+\.[0-9]+\.?[0-9]?[0-9]?[0-9]?[0-9]?\"/g "mad-utils.git#v$NEW_VERSION_NUMBER\"" package.json --isRegex

# git: Add, commit, and push package.json change to repo, then publish new version
git add package.json
git commit -m "Bump to version $NEW_VERSION_NUMBER"
gpocur
git tag v$1
git push origin v$1
npm publish
echo "Published v$1 of mad-utils!"

###################################### UPGRADE IN OTHER REPOS ######################################
# Exit if --local-reinstalls not set
# Script won't try to reinstall mad-utils in other repos in this case
if [[ "$2" != "--local-reinstalls" ]]; then
    echo "Done! (skipped install in Javelin & webclient dirs, since --local-reinstalls not set)"
    exit
fi

# Install in Javelin dir
pushd $JAVELIN_DIR
yarn remove mad-utils
yarn add mad-utils
git add package.json yarn.lock
git commit -m "Upgraded mad-utils to v$NEW_VERSION_NUMBER"
gpocur
popd

# Install in Webclient dir
pushd $WEBCLIENT_DIR
yarn remove mad-utils
yarn add mad-utils
git add package.json yarn.lock
git commit -m "Upgraded mad-utils to v$NEW_VERSION_NUMBER"
gpocur

# Start webclient build again
./common-cmds clean

# Return to mad-utils
popd

echo "publish complete! Bumped to version $NEW_VERSION_NUMBER, published to npm, installed in Javelin & webclient projects"
